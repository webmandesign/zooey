// core/navigation
// core/navigation-link
// core/navigation-submenu

//
// The CSS selector specificity in this file is tragic, but needed
// to override WordPress native navigation block styles.
//

@import '../_tools/_index';
@import '../_setup/_index';

.wp-block-navigation {

	// Color styles.
	&,
	.editor-styles-wrapper[class] & {

		&.has-background[class] {
			padding-block: $ratio_maj + em;

			// This is needed to fix front-end:
			.wp-block-navigation__container.has-background {
				padding: 0;
			}
		}

		&-item.has-background,
		.has-child .has-child.has-background,
		.wp-block-navigation__responsive-container:not(.hidden-by-default):not(.is-menu-open) {
			padding: 0;
			background: transparent;
		}
			.has-child .has-child.has-background {
				background: transparent !important;
			}

		&-item.has-text-color {
			color: inherit;
		}
			.has-child .has-child.has-background {
				color: inherit !important;
			}
	}

	& & {
		font-size: 1em; // Yes, this fix is really needed, unfortunately...
	}
}

//
// Mobile menu.
//

	// Setup.

		@keyframes showSubMenuMobile {
			from {
				opacity: 0;
				transform: translateY( -1rem );
			}
			to {
				opacity: 1;
				transform: none;
			}
		}

	.wp-block-navigation__responsive-container {

		.wp-block-navigation-item__description {
			font-size: $ratio_maj + em;
		}

		&:not(.is-menu-open.is-menu-open) {
			border-color: inherit;
		}

		// Menu toggle button(s).
		&-open,
		&-close {

			&,
			.editor-styles-wrapper[class] & {
				padding: $ratio_maj + em;
				background: var(--theme--css--button--color--background);
				color: var(--theme--css--button--color--text);
				border: 2px solid var(--theme--css--button--color--border);
				box-shadow: var(--wp--preset--shadow--s);
				transition:
					background .1s linear,
					color .1s linear,
					border .1s linear,
					box-shadow .1s linear;

				&:hover,
				&:focus {
					box-shadow: var(--wp--preset--shadow--m);
				}

				&:focus {
					outline-color: inherit;
				}

				&:active {
					box-shadow: none;
				}
			}
		}
	}

	.wp-block-navigation .wp-block-navigation__responsive-container.is-menu-open.is-menu-open {
		--theme--css--submenu-item-padding: #{ $ratio_maj + rem };
		--theme--css--submenu-gap: 0;
		--theme--css--menu-gap: #{ $ratio_maj + rem };

		width: 100vw; // This is required.
		height: 100vh; // This is required.
		padding-inline: 6vw;
		font-size: 1rem;

		.wp-block-navigation-item {
			padding: 0;
			white-space: normal;

			&__content {
				flex-grow: 1;
			}
		}

		.wp-block-navigation__submenu-container {
			--theme--css--submenu-open-animation: showSubMenuMobile .3s;
		}

		// Outer dialog container.
		.wp-block-navigation__responsive-dialog {
			max-width: map_get( $breakpoint, 's' ) + px;
			margin-inline: auto;
			margin-block-start: calc( 1em + var( --wp-admin--admin-bar--height, 0 ) );
		}

		// Menu list wrapper <div>.
		.wp-block-navigation__responsive-container-content {
			padding-top: var(--wp--custom--spacing--menu-mobile--top--m);
			padding-bottom: var(--wp--custom--spacing--menu-mobile--bottom--m);
		}

		// Menu list <ul>.
		.wp-block-navigation__container {
			gap: var(--theme--css--menu-gap);
			width: 100%;
			max-width: 100%;

			// Top level menu items.
			> .wp-block-navigation-item > .wp-block-navigation-item__content {
				padding-block: 0;
				font-size: var(--theme--css--font-size-h3);
			}

			// Submenu list <ul>.
			.wp-block-navigation__submenu-container {
				gap: var(--theme--css--submenu-gap);
				width: 100%;
				inset: 0;
				padding: 0 1em;
				padding-inline-end: 0;
				margin-block-start: .5em;
				font-size: 1rem;
				border-color: inherit;
				box-shadow: none;
				transform: none;
			}
		}

		// Submenu list <ul> hiding.
		[aria-expanded="false"] + .wp-block-navigation__submenu-container {
			display: none;
		}

		// Navigation item <li>.
		.wp-block-navigation-item {
			flex-wrap: wrap;
			flex-direction: row;
			justify-content: space-between;
			align-items: center;
			width: 100%;
			min-height: var(--theme--css--submenu-toggle-size);
		}
	}

	.wp-block-navigation.is-style-fixed-mobile-toggle:not(.block-editor-block-list__block) {

		.wp-block-navigation__responsive-container {

			&.is-menu-open {
				animation: none; // Required to make `position: fixed;` on children (such as close button) work.
			}

			&-open,
			&-close {
				position: fixed;
				left: 50%;
				right: auto;
				top: auto;
				bottom: 1em;
				padding: 1em;
				font-size: 1rem;
				background: var(--theme--css--button--color--background);
				color: var(--theme--css--button--color--text);
				border-color: currentColor;
				z-index: 10;
				transform: translateX(-50%);

				.rtl & {
					left: auto;
					right: 50%;
					transform: translateX(50%);
				}

				&:focus {
					outline-color: var(--theme--css--button--color--background);
				}
			}
		}

		// Menu list wrapper <div>.
		.wp-block-navigation__responsive-container.is-menu-open .wp-block-navigation__responsive-container-content {
			padding-block-start: var(--wp--custom--spacing--menu-mobile--top--l);
		}
	}

	// Blurred background.

		.wp-block-navigation__responsive-overlay {
			display: none;
		}

		.wp-block-navigation__responsive-container.is-menu-open {
			background: none !important;
			backdrop-filter: blur( var(--wp--custom--filter--blur--backdrop) );

			.wp-block-navigation__responsive-overlay {
				display: block;
				position: absolute;
				inset: 0;
				opacity: .95;
			}
		}
